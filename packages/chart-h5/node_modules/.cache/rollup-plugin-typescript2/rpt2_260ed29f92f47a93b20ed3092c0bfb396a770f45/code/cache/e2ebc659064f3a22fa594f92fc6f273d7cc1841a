{"code":"// import { baseMarketStore } from '@/store/market'\r\n// import { getKlineHistory } from '@/apis/market'\r\nimport { sortMarketChartData } from '@nbit/chart-utils';\r\nlet baseMarketStore;\r\nlet getKlineHistory;\r\nconst datafeedsFun = function (store, method) {\r\n    baseMarketStore = store;\r\n    getKlineHistory = method;\r\n    // // 用于临时存储回调函数\r\n    // this._dataCallBacks = {}\r\n    // // 存储当前的时间间隔，1m,5m\r\n    // this._currentSymbol = symbol\r\n    // this._currentName = symbol\r\n    // this._current_resolution = '1min'\r\n};\r\nconst Datafeeds = {\r\n    UDFCompatibleDatafeed: datafeedsFun,\r\n};\r\nDatafeeds.UDFCompatibleDatafeed = datafeedsFun;\r\nfunction getDecimal() {\r\n    let decimal = 2;\r\n    let currentObject = baseMarketStore.getState().coinModule.currentCoin;\r\n    if (currentObject && currentObject.digit && currentObject.digit.indexOf('#') !== -1) {\r\n        let digit = currentObject.digit.split('#');\r\n        decimal = Number(digit[0]);\r\n    }\r\n    let str = '1';\r\n    if (decimal > 0) {\r\n        for (let i = 1; i <= decimal; i += 1) {\r\n            str += '0';\r\n        }\r\n    }\r\n    return parseInt(str);\r\n}\r\n/**\r\n * 构造默认配置\r\n * {\"supports_search\":true,\"supports_group_request\":false,\"supports_marks\":true,\"supports_timescale_marks\":true,\"supports_time\":true,\"exchanges\":[{\"value\":\"\",\"name\":\"All Exchanges\",\"desc\":\"\"},{\"value\":\"NasdaqNM\",\"name\":\"NasdaqNM\",\"desc\":\"NasdaqNM\"},{\"value\":\"NYSE\",\"name\":\"NYSE\",\"desc\":\"NYSE\"},{\"value\":\"NCM\",\"name\":\"NCM\",\"desc\":\"NCM\"},{\"value\":\"NGM\",\"name\":\"NGM\",\"desc\":\"NGM\"}],\"symbols_types\":[{\"name\":\"All types\",\"value\":\"\"},{\"name\":\"Stock\",\"value\":\"stock\"},{\"name\":\"Index\",\"value\":\"index\"}],\"supported_resolutions\":[\"D\",\"2D\",\"3D\",\"W\",\"3W\",\"M\",\"6M\"]}\r\n */\r\nfunction defaultConfig() {\r\n    return {\r\n        supports_search: false,\r\n        supports_group_request: false,\r\n        supports_marks: false,\r\n        supports_timescale_marks: false,\r\n        supports_time: true,\r\n        exchanges: [\r\n            {\r\n                value: '',\r\n                name: 'All Exchanges',\r\n                desc: '',\r\n            },\r\n            {\r\n                value: 'NasdaqNM',\r\n                name: 'NasdaqNM',\r\n                desc: 'NasdaqNM',\r\n            },\r\n            {\r\n                value: 'NYSE',\r\n                name: 'NYSE',\r\n                desc: 'NYSE',\r\n            },\r\n            {\r\n                value: 'NCM',\r\n                name: 'NCM',\r\n                desc: 'NCM',\r\n            },\r\n            {\r\n                value: 'NGM',\r\n                name: 'NGM',\r\n                desc: 'NGM',\r\n            },\r\n        ],\r\n        symbols_types: [\r\n            {\r\n                name: 'All types',\r\n                value: '',\r\n            },\r\n            {\r\n                name: 'Stock',\r\n                value: '',\r\n            },\r\n            {\r\n                name: 'Index',\r\n                value: '',\r\n            },\r\n        ],\r\n        // \"supported_resolutions\": ['1', '5', '15', '30', '60', 'D', 'W', 'M']\r\n        supported_resolutions: ['1', '5', '15', '30', '60', '120', '240', '1440', '10080', '43200'],\r\n    };\r\n}\r\n/**\r\n * onready 方法\r\n * @param callback\r\n */\r\nDatafeeds.UDFCompatibleDatafeed.prototype.onReady = function (callback) {\r\n    setTimeout(function () {\r\n        callback(defaultConfig());\r\n    }, 0);\r\n};\r\n/**\r\n *\r\n * 当需要根据交易对的名字获得交易对的详细信息的时候调用\r\n * @param symbolName\r\n * @param onSymbolResolvedCallback\r\n *\r\n * @param onResolveErrorCallback\r\n */\r\nDatafeeds.UDFCompatibleDatafeed.prototype.resolveSymbol = function (symbolName, onSymbolResolvedCallback, onResolveErrorCallback) {\r\n    setTimeout(function () {\r\n        onSymbolResolvedCallback({\r\n            'name': symbolName,\r\n            'exchange-traded': '',\r\n            'exchange-listed': '',\r\n            'timezone': 'Asia/Shanghai',\r\n            'minmov': 1,\r\n            'minmov2': 0,\r\n            'pointvalue': 1,\r\n            'session': '24x7',\r\n            'has_intraday': true,\r\n            'has_no_volume': false,\r\n            'type': 'bitcoin',\r\n            'supported_resolutions': ['1', '5', '15', '30', '60', '120', '240', '1440', '10080', '43200'],\r\n            'has_weekly_and_monthly': true,\r\n            'has_daily': true,\r\n            'pricescale': getDecimal(),\r\n            'ticker': symbolName,\r\n            'exchange': '',\r\n            'data_status': 'streaming',\r\n        });\r\n    }, 0);\r\n};\r\n/**\r\n *\r\n * @param symbolInfo\r\n * @param resolution\r\n * @param from\r\n * @param to\r\n * @param onHistoryCallback\r\n * @param onErrorCallback\r\n * @param firstDataRequest 是否是第一次加载数据，第一次加载数据的时候，可以忽略 to\r\n *\r\n * {time, close, open, high, low, volume}\r\n *\r\n */\r\nDatafeeds.UDFCompatibleDatafeed.prototype.getBars = function (symbolInfo, resolution, periodParams, onHistoryCallback, onErrorCallback) {\r\n    const { firstDataRequest } = periodParams;\r\n    function firstReq() {\r\n        let symbol = 1;\r\n        if (baseMarketStore.getState().coinModule.currentCoin.tradeId) {\r\n            symbol = baseMarketStore.getState().coinModule.currentCoin.tradeId;\r\n        }\r\n        // 获取历史数据的当前查看数据时间段\r\n        let time = '1m';\r\n        switch (resolution) {\r\n            case '1':\r\n            case '5':\r\n            case '15':\r\n            case '30':\r\n                time = `${resolution}m`;\r\n                break;\r\n            case '60':\r\n                time = `${1}h`;\r\n                break;\r\n            case '120':\r\n                time = `${2}h`;\r\n                break;\r\n            case '240':\r\n                time = `${4}h`;\r\n                break;\r\n            case '1440':\r\n                time = `${1}d`;\r\n                break;\r\n            case '10080':\r\n                time = `${1}w`;\r\n                break;\r\n            case '43200':\r\n                time = `${1}mo`;\r\n                break;\r\n            default:\r\n                time = `${resolution}m`;\r\n        }\r\n        let from = '';\r\n        let params = {\r\n            tradeId: symbol,\r\n            period: time,\r\n            from: firstDataRequest ? '' : from,\r\n            limit: 1000,\r\n            direction: firstDataRequest ? 1 : -1,\r\n        };\r\n        getKlineHistory(params).then(res => {\r\n            if (res.isOk) {\r\n                const klineData = [];\r\n                if (res.data?.length) {\r\n                    res.data.forEach(item => {\r\n                        const barValue = {\r\n                            time: Number(item[0]),\r\n                            open: Number(item[1]),\r\n                            high: Number(item[2]),\r\n                            low: Number(item[3]),\r\n                            close: Number(item[4]),\r\n                            volume: Number(item[5]),\r\n                        };\r\n                        klineData.push(barValue);\r\n                    });\r\n                    let meta = {\r\n                        noData: !(klineData.length > 0),\r\n                    };\r\n                    const _klineData = sortMarketChartData(klineData);\r\n                    onHistoryCallback(_klineData, meta);\r\n                    if (firstDataRequest) {\r\n                        // 历史 K 线绘制完成后开启订阅\r\n                        baseMarketStore.getState().coinModule.updateCoinHistoryKline({\r\n                            r: time,\r\n                            t: new Date().getTime(),\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    if (firstDataRequest) {\r\n        firstReq();\r\n    }\r\n    else {\r\n        onHistoryCallback([], { noData: true });\r\n    }\r\n};\r\n/**\r\n * 订阅 K 线数据。图表库将调用 onRealtimeCallback 方法以更新实时数据。\r\n */\r\nDatafeeds.UDFCompatibleDatafeed.prototype.subscribeBars = function (symbolInfo, resolution, onRealtimeCallback, listenerGUID, onResetCacheNeededCallback) {\r\n    baseMarketStore.getState().coinModule.updateKlineCallback(onRealtimeCallback);\r\n};\r\n/**\r\n * 取消订阅 K 线数据。在调用 subscribeBars 方法时，图表库将跳过与 subscriberUID 相同的对象。\r\n */\r\nDatafeeds.UDFCompatibleDatafeed.prototype.unsubscribeBars = function (listenerGUID) {\r\n    baseMarketStore.getState().coinModule.updateKlineCallback(null);\r\n};\r\n/**\r\n * 获取服务器时间\r\n * @param callback\r\n */\r\nDatafeeds.UDFCompatibleDatafeed.prototype.getServerTime = function (callback) {\r\n    let timestamp = new Date().getTime();\r\n    callback(timestamp);\r\n};\r\nexport default Datafeeds;\r\n//# sourceMappingURL=coin-datafeed.js.map","references":["/Users/xiaoyu/Desktop/xiangmu/toolbox/node_modules/.pnpm/@nbit+chart-utils@1.0.0-beta.35/node_modules/@nbit/chart-utils/lib/index.d.ts"],"map":"{\"version\":3,\"file\":\"coin-datafeed.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/k-line/coin-datafeed.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/xiaoyu/Desktop/xiangmu/toolbox/packages/chart-h5/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/k-line/coin-datafeed.d.ts","writeByteOrderMark":false,"text":"type DatafeedsType = {\r\n    UDFCompatibleDatafeed: (httpURL: any, symbol: any) => void;\r\n};\r\ndeclare const Datafeeds: DatafeedsType;\r\nexport default Datafeeds;\r\n"}}
